"use strict";function ownKeys(s,e){var r=Object.keys(s);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(s);e&&(t=t.filter(function(e){return Object.getOwnPropertyDescriptor(s,e).enumerable})),r.push.apply(r,t)}return r}function _objectSpread(s){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(r,!0).forEach(function(e){_defineProperty(s,e,r[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(r)):ownKeys(r).forEach(function(e){Object.defineProperty(s,e,Object.getOwnPropertyDescriptor(r,e))})}return s}function _defineProperty(e,s,r){return s in e?Object.defineProperty(e,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[s]=r,e}var express=require("express"),path=require("path"),mysql=require("mysql2"),bodyParser=require("body-parser"),session=require("express-session"),multer=require("multer"),storage=multer.memoryStorage(),upload=multer({storage:storage}),db=mysql.createConnection({host:"localhost",user:"root",password:"",database:"cob_database"}),app=express(),port=process.env.PORT||1613;function isAuthenticated(e,s,r){e.session.user?r():s.redirect("/assets/html/login.html")}app.use(bodyParser.urlencoded({extended:!1})),app.use(bodyParser.json()),app.use(express.static(path.join(__dirname,"public"))),app.use(session({secret:"your-secret-key",resave:!1,saveUninitialized:!0})),app.use("/assets",express.static(path.join(__dirname,"assets"))),app.use("/index.html",express.static(path.join(__dirname,"index.html"))),db.connect(function(e){if(e)throw e;console.log("Connected to the database")}),app.get("/",function(e,s){s.sendFile(path.join(__dirname,"index.html"))}),app.post("/api/login",function(t,a){var e=t.body,s=e.username,r=e.password;console.log("Received POST /api/login with data:",{username:s,password:r}),db.query("SELECT * FROM user WHERE username = ? AND password = ?",[s,r],function(e,s){if(e)return console.error("Database query error:",e),void a.status(500).send("Internal Server Error");if(console.log("Database query result:",s),0<s.length){var r=s[0];t.session.user={fullname:r.fullname,email:r.email,username:r.username,reward:r.reward,bio:r.bio,avatar:r.avatar},a.redirect("/index.html")}else a.redirect("/assets/html/login.html?loginFailed=true")})}),app.get("/api/checkAuth",function(e,s){if(e.session.user){var r=e.session.user,t=r.avatar?Buffer.from(r.avatar,"binary").toString("base64"):null;s.json({success:!0,user:_objectSpread({},r,{avatar:t})})}else s.json({success:!1})}),app.get("/index.html",isAuthenticated,function(e,s){s.sendFile(path.join(__dirname,"index.html"))}),app.post("/api/signup",function(e,r){var s=e.body,t=s.fullname,a=s.email,n=s.username,o=s.password;db.query("INSERT INTO user (fullname, email, username, password) VALUES (?, ?, ?, ?)",[t,a,n,o],function(e,s){if(e)return console.error("Error inserting data into the database:",e),void r.redirect("/assets/html/signup.html?signupFailed=true");r.redirect("/assets/html/login.html")})}),app.post("/api/contact",function(e,r){var s=e.body,t=s.name,a=s.email,n=s.member,o=s.opinion;if(t&&a&&o){db.query("INSERT INTO contact (name, email, member, opinion) VALUES (?, ?, ?, ?)",[t,a,n,o],function(e,s){if(e)return console.error("Error inserting data into the database:",e),void r.redirect("/assets/html/contact.html?sendcontactFailed=true");r.redirect("/assets/html/contact.html?sendcontactFailed=0987")})}else r.status(400).send("Name, Email, and Opinion are required fields.")}),app.post("/api/logout",function(e,s){e.session.destroy(function(e){if(e)return s.status(500).json({success:!1,message:"Failed to log out"});s.json({success:!0})})}),app.set("view engine","ejs"),app.get("/profile",isAuthenticated,function(e,s){var r=e.session.user;if(r){var t=r.avatar?Buffer.from(r.avatar.data).toString("base64"):null,a={fullname:r.fullname,username:r.username,email:r.email,reward:"100",bio:r.bio,avatar:t};s.render("profile",a)}else s.redirect("assetshtmllogin.html")}),app.get("/contact",function(e,s){s.render("contact")}),app.get("/booking",function(e,s){s.render("booking")}),app.post("/api/postDiary",upload.single("photo"),function(e,r){var s=e.body.description,t=e.file.buffer,a=e.session.user;db.query("INSERT INTO post_diary (username, description, photo) VALUES (?, ?, ?)",[a.username,s,t],function(e,s){if(e)return console.error("Error inserting data into the database:",e),void r.status(500).json({success:!1,error:"Failed to insert data into database"});r.json({success:!0})})}),app.get("/api/posts",function(e,t){var s=e.session.user.username;s?db.query("SELECT * FROM post_diary WHERE username = ?",[s],function(e,s){if(e)return console.error("Error fetching posts:",e),void t.status(500).json({success:!1,error:"Failed to fetch posts from database"});var r=s.map(function(e){return{id:e.id,username:e.username,description:e.description,photo:e.photo.toString("base64")}});t.json({success:!0,posts:r})}):t.status(400).json({success:!1,error:"Username is required"})}),app.post("/api/postInspiration",upload.single("photo"),function(e,r){var s=e.body,t=s.description,a=s.place,n=s.country,o=e.file.buffer,i=e.session.user;db.query("INSERT INTO post_inspiration (username, description, place, country, photo) VALUES (?, ?, ?, ?, ?)",[i.username,t,a,n,o],function(e,s){if(e)return console.error("Error inserting data into the database:",e),void r.status(500).json({success:!1,error:"Failed to insert data into database"});console.log("Inspiration posted successfully"),r.json({success:!0})})}),app.get("/api/postsInspiration_load",function(e,t){var s=e.session.user;if(!s)return t.status(401).json({success:!1,error:"Unauthorized"});db.query("SELECT * FROM post_inspiration WHERE username = ?",[s.username],function(e,s){if(e)return console.error("Error fetching posts:",e),t.status(500).json({success:!1,error:"Failed to fetch posts"});var r=s.map(function(e){return{username:e.username,description:e.description,photo:e.photo.toString("base64"),love:e.love,place:e.place,country:e.country}});t.json({success:!0,posts:r})})}),app.post("/uploadAvatar",isAuthenticated,upload.single("avatar"),function(e,r){var s=e.session.user;if(!s)return r.status(401).json({message:"Unauthorized"});if(!e.file)return r.status(400).json({message:"Please select an image file."});var t=e.file.buffer;db.query("UPDATE user SET avatar = ? WHERE username = ?",[t,s.username],function(e,s){if(e)return console.error("Error updating avatar in the database:",e),r.status(500).json({success:!1,message:"Failed to update avatar."});r.json({success:!0,message:"Avatar updated successfully."})})}),app.post("/uploadAvatar",isAuthenticated,upload.single("avatar"),function(e,t){var s=e.session.user;if(!s)return t.status(401).json({message:"Unauthorized"});if(!e.file)return t.status(400).json({message:"Please select an image file."});var a=e.file.buffer;db.query("UPDATE user SET avatar = ? WHERE username = ?",[a,s.username],function(e,s){if(e)return console.error("Error updating avatar in the database:",e),t.status(500).json({success:!1,message:"Failed to update avatar."});var r=a.toString("base64");t.json({success:!0,avatarBase64:r})})}),app.get("/getAvatar",isAuthenticated,function(e,t){var s=e.session.user;if(!s)return t.status(401).json({message:"Unauthorized"});db.query("SELECT avatar FROM user WHERE username = ?",[s.username],function(e,s){if(e)return console.error("Error fetching avatar from the database:",e),t.status(500).json({success:!1,message:"Failed to fetch avatar."});if(0<s.length){var r=s[0].avatar.toString("base64");t.json({success:!0,avatar:r})}else t.status(404).json({success:!1,message:"Avatar not found."})})}),app.listen(port,function(){console.log("Server is running on port ".concat(port))});
//# sourceMappingURL=server.min.js.map
